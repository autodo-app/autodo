{"version":3,"sources":["webpack:///./src/components/app/login/login-form.tsx","webpack:///./src/components/app/login/login-page.tsx","webpack:///./src/pages/login.tsx"],"names":["LoginForm","props","handle_login","useState","username","setUsername","password","setPassword","onSubmit","e","htmlFor","type","name","value","onChange","target","LoginPage","dispatch","useDispatch","data","a","preventDefault","logInAsync","window","location","replace","Login","authStatus","useSelector","state","auth","status","useEffect","fetchToken","Main","store","ThemeProvider","theme","CssBaseline"],"mappings":"mMAmDeA,EAvC2B,SAACC,GAAU,IAC3CC,EAAiBD,EAAjBC,aAD2C,EAEnBC,mBAAS,IAAlCC,EAF4C,KAElCC,EAFkC,OAGnBF,mBAAS,IAAlCG,EAH4C,KAGlCC,EAHkC,KAUnD,OACE,wBACEC,SAAU,SAACC,GAAD,OACRP,EAAaO,EAAG,CACdL,SAAUA,EACVE,SAAUA,MAId,oCACA,yBAAOI,QAAQ,YAAf,YACA,yBACEC,KAAK,OACLC,KAAK,WACLC,MAAOT,EACPU,SApBoB,SAACL,GAAD,OACxBJ,EAAYI,EAAEM,OAAOF,UAqBnB,yBAAOH,QAAQ,YAAf,YACA,yBACEC,KAAK,WACLC,KAAK,WACLC,MAAOP,EACPQ,SAzBoB,SAACL,GAAD,OACxBF,EAAYE,EAAEM,OAAOF,UA0BnB,yBAAOF,KAAK,a,YCvCX,SAASK,IACd,IAAMC,EAAWC,cAEXhB,EAAY,uCAAG,WACnBO,EACAU,GAFmB,SAAAC,EAAA,6DAInBX,EAAEY,iBAJiB,SAKbJ,EAASK,qBAAWH,IALP,OAMnBI,OAAOC,SAASC,QAAQ,KANL,2CAAH,wDASlB,OACE,gCACE,gBAAC,EAAD,CAAWvB,aAAc,SAACO,EAAGU,GAAJ,OAAajB,EAAaO,EAAGU,O,4BCVtDO,EAAQ,WACZ,IAAMT,EAAWC,cACXS,EAAaC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKC,UAMhE,OALAC,qBAAU,WACW,SAAfL,GACFV,EAASgB,0BAEV,CAACN,EAAYV,IACT,gBAACD,EAAD,OAeMkB,UAbf,WACE,OACE,gBAAC,aAAD,KACE,gBAAC,IAAD,CAAUC,MAAOA,KACf,gBAACC,EAAA,EAAD,CAAeC,MAAOA,KACpB,gBAACC,EAAA,EAAD,MACA,gBAAC,EAAD","file":"component---src-pages-login-tsx-7cb63e9e770a3cf54f68.js","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\ninterface LoginState {\n  username: string;\n  password: string;\n}\n\ntype Props = {\n  handle_login: (e: any, data: LoginState) => void;\n};\n\nexport const LoginForm: React.FC<Props> = (props) => {\n  const { handle_login } = props;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onUsernameChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setUsername(e.target.value);\n  const onPasswordChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(e.target.value);\n\n  return (\n    <form\n      onSubmit={(e) =>\n        handle_login(e, {\n          username: username,\n          password: password,\n        })\n      }\n    >\n      <h4>Log In</h4>\n      <label htmlFor=\"username\">Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={onUsernameChanged}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={onPasswordChanged}\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport LoginForm from './login-form';\nimport { AuthRequest } from '../_models';\nimport { logInAsync } from '../_store';\n\nexport function LoginPage() {\n  const dispatch = useDispatch();\n\n  const handle_login = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n    data: AuthRequest,\n  ) => {\n    e.preventDefault();\n    await dispatch(logInAsync(data));\n    window.location.replace('/');\n  };\n\n  return (\n    <>\n      <LoginForm handle_login={(e, data) => handle_login(e, data)} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport { LoginPage } from '../components/app/login';\nimport store, { RootState } from '../components/app/store';\nimport { fetchToken } from '../components/app/_store';\nimport theme from '../components/theme';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const authStatus = useSelector((state: RootState) => state.auth.status);\n  useEffect(() => {\n    if (authStatus === 'idle') {\n      dispatch(fetchToken());\n    }\n  }, [authStatus, dispatch]);\n  return <LoginPage />;\n};\nfunction Main() {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Login />\n        </ThemeProvider>\n      </Provider>\n    </React.StrictMode>\n  );\n}\n\nexport default Main;\n"],"sourceRoot":""}