version: '3.7'

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn api.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - .env.staging.api
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.staging.db
  frontend:
    build: ./frontend
    working_dir: /app
    command: ./entrypoint.sh
    volumes:
      - ./frontend/:/app
      - /app/node_modules/
    ports: 
      - 8080:8080
    env_file:
      - .env.staging.frontend
    depends_on:
      - web
  nginx-proxy:
    container_name: nginx-proxy
    build: ./docker/nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch/Dockerfile
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data 
    expose:
      - 9200
      - 9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.watermark.low=97%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  elasticsearch-data:
