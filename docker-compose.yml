version: '3'

volumes:
  elasticsearch-data:
    driver: local
    
services:
  db:
    image: postgres
    volumes:
      - static_volume:/home/app/web/static
    ports: 
       - '5432'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    restart: always
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    #command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn -w 3 api.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static
    expose:
      - 8000
        #ports:
        #- 8000:8000
    depends_on:
      - db
        #links:
        #- db:db
  elasticsearch:
    container_name: django_elasticsearch_dsl_drf_elasticsearch
    build:
      context: .
      dockerfile: ./docker/elasticsearch/Dockerfile
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.watermark.low=97%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  nginx:
    build: ./docker/nginx
    ports:
      - 1337:80
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  elasticsearch-data:

        #kibana:
        #container_name: kibana
        # image: docker.elastic.co/kibana/kibana:7.4.0
        #environment:
        #- ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        #ports:
        #- "5601:5601"
        #depends_on:
        #- elasticsearch

