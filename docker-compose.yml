version: '3.7'

services:
  web:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/backend/
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=autodo
      - POSTGRES_PASSWORD=autodo
      - POSTGRES_DB=autodo_dev
  frontend:
    build: ./frontend
    command: npm start 
    volumes:
      - ./frontend/:/usr/src/frontend/
    ports: 
      - 8080:8080
    env_file:
      - ./.env.dev 
    depends_on:
      - web
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch/Dockerfile
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data 
    expose:
      - 9200
      - 9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.watermark.low=97%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  elasticsearch-data:

